{
	"info": {
		"_postman_id": "yoraa-items-apis-collection",
		"name": "Yoraa Items & Item Details APIs",
		"description": "Collection for Yoraa backend Item and Item Details APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Items",
			"item": [
				{
					"name": "Create Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set authorization header if token exists",
									"if (pm.environment.get('jwt_token')) {",
									"    pm.request.headers.add({",
									"        key: 'Authorization',",
									"        value: 'Bearer ' + pm.environment.get('jwt_token')",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Men's Cotton T-Shirt",
									"description": "Item name (required)",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Comfortable cotton t-shirt for daily wear",
									"description": "Item description (optional)",
									"type": "text"
								},
								{
									"key": "price",
									"value": "2992",
									"description": "Item price (required)",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "50",
									"description": "Stock quantity (required)",
									"type": "text"
								},
								{
									"key": "subCategoryId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "Valid MongoDB ObjectId of subcategory (required)",
									"type": "text"
								},
								{
									"key": "material",
									"value": "cotton,polyester",
									"description": "Comma-separated materials (optional)",
									"type": "text"
								},
								{
									"key": "discountPrice",
									"value": "2500",
									"description": "Discount price (optional)",
									"type": "text"
								},
								{
									"key": "filters",
									"value": "[{\"key\":\"color\",\"value\":\"red\",\"code\":\"#FF0000\"}]",
									"description": "JSON string of custom filters (optional)",
									"type": "text"
								},
								{
									"key": "image",
									"description": "Product image file (required)",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								""
							]
						},
						"description": "Creates a new item with image upload. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Get All Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								""
							]
						},
						"description": "Retrieves all items. Public access."
					},
					"response": []
				},
				{
					"name": "Get Item by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item"
								}
							]
						},
						"description": "Retrieves a single item by its ID. Public access."
					},
					"response": []
				},
				{
					"name": "Get Items by Filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"filters\": {\n        \"categoryId\": [\"64f1b2a5c8d9e1234567890a\"],\n        \"subCategoryId\": [\"64f1b2a5c8d9e1234567890b\"],\n        \"brand\": [\"Nike\", \"Adidas\"],\n        \"minPrice\": 1000,\n        \"maxPrice\": 5000\n    },\n    \"searchText\": \"t-shirt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/items/filter",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								"filter"
							]
						},
						"description": "Retrieves items based on filter criteria."
					},
					"response": []
				},
				{
					"name": "Get Items by SubCategory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/items/subcategory/:subCategoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								"subcategory",
								":subCategoryId"
							],
							"variable": [
								{
									"key": "subCategoryId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the subcategory"
								}
							]
						},
						"description": "Retrieves all items for a specific subcategory."
					},
					"response": []
				},
				{
					"name": "Get Latest Items by SubCategory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/items/latest-items/:subCategoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								"latest-items",
								":subCategoryId"
							],
							"variable": [
								{
									"key": "subCategoryId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the subcategory"
								}
							]
						},
						"description": "Retrieves the latest items for a specific subcategory."
					},
					"response": []
				},
				{
					"name": "Get Total Item Count",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set authorization header if token exists",
									"if (pm.environment.get('jwt_token')) {",
									"    pm.request.headers.add({",
									"        key: 'Authorization',",
									"        value: 'Bearer ' + pm.environment.get('jwt_token')",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/items/totalItemCount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								"totalItemCount"
							]
						},
						"description": "Retrieves the total number of items. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Download Items",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set authorization header if token exists",
									"if (pm.environment.get('jwt_token')) {",
									"    pm.request.headers.add({",
									"        key: 'Authorization',",
									"        value: 'Bearer ' + pm.environment.get('jwt_token')",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/items/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"items",
								"download"
							]
						},
						"description": "Downloads all items as JSON file. Requires admin authentication."
					},
					"response": []
				}
			],
			"description": "Item management APIs"
		},
		{
			"name": "Item Details",
			"item": [
				{
					"name": "Create Item Details",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "descriptionAndReturns",
									"value": "High quality cotton fabric. 30-day return policy.",
									"description": "Product description and return policy (required)",
									"type": "text"
								},
								{
									"key": "fitDetails",
									"value": "[\"Slim fit\", \"True to size\"]",
									"description": "JSON array of fit details (optional)",
									"type": "text"
								},
								{
									"key": "careInstructions",
									"value": "Machine wash cold, tumble dry low",
									"description": "Care instructions (optional)",
									"type": "text"
								},
								{
									"key": "modelHeight",
									"value": "6'0\"",
									"description": "Model height (optional)",
									"type": "text"
								},
								{
									"key": "modelMeasurements",
									"value": "Chest: 38\", Waist: 32\"",
									"description": "Model measurements (optional)",
									"type": "text"
								},
								{
									"key": "modelWearingSize",
									"value": "Medium",
									"description": "Size model is wearing (optional)",
									"type": "text"
								},
								{
									"key": "colors",
									"value": "[{\"colorId\":\"red_001\",\"color\":\"Red\",\"sizes\":[{\"size\":\"S\",\"stock\":10,\"sku\":\"RED_S_001\"},{\"size\":\"M\",\"stock\":15,\"sku\":\"RED_M_001\"}]},{\"colorId\":\"blue_001\",\"color\":\"Blue\",\"sizes\":[{\"size\":\"S\",\"stock\":8,\"sku\":\"BLUE_S_001\"}]}]",
									"description": "JSON array of color data with sizes (required)",
									"type": "text"
								},
								{
									"key": "manufacturerName",
									"value": "ABC Textiles Ltd",
									"description": "Manufacturer name (required)",
									"type": "text"
								},
								{
									"key": "manufacturerAddress",
									"value": "123 Industrial Area, Mumbai",
									"description": "Manufacturer address (required)",
									"type": "text"
								},
								{
									"key": "countryOfOrigin",
									"value": "India",
									"description": "Country of origin (required)",
									"type": "text"
								},
								{
									"key": "manufacturerPhone",
									"value": "+91-9876543210",
									"description": "Manufacturer phone (required)",
									"type": "text"
								},
								{
									"key": "manufacturerEmail",
									"value": "contact@abctextiles.com",
									"description": "Manufacturer email (required)",
									"type": "text"
								},
								{
									"key": "images",
									"description": "Multiple image files (optional, max 25)",
									"type": "file",
									"src": []
								},
								{
									"key": "videos",
									"description": "Multiple video files (optional, max 25)",
									"type": "file",
									"src": []
								},
								{
									"key": "sizeChartInch",
									"description": "Size chart in inches Excel file (optional)",
									"type": "file",
									"src": []
								},
								{
									"key": "sizeChartCm",
									"description": "Size chart in cm Excel file (optional)",
									"type": "file",
									"src": []
								},
								{
									"key": "sizeMeasurement",
									"description": "Size measurement Excel file (optional)",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item"
								}
							]
						},
						"description": "Creates item details for a specific item including images, videos, and size charts."
					},
					"response": []
				},
				{
					"name": "Get All Item Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								""
							]
						},
						"description": "Retrieves all item details."
					},
					"response": []
				},
				{
					"name": "Get Item Details by Item ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item"
								}
							]
						},
						"description": "Retrieves item details for a specific item by its ID."
					},
					"response": []
				},
				{
					"name": "Update Item Details",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "descriptionAndReturns",
									"value": "Updated description and return policy",
									"description": "Updated product description and return policy",
									"type": "text"
								},
								{
									"key": "fitDetails",
									"value": "[\"Regular fit\", \"Size up for loose fit\"]",
									"description": "Updated JSON array of fit details",
									"type": "text"
								},
								{
									"key": "careInstructions",
									"value": "Hand wash recommended, air dry",
									"description": "Updated care instructions",
									"type": "text"
								},
								{
									"key": "colors",
									"value": "[{\"colorId\":\"green_001\",\"color\":\"Green\",\"sizes\":[{\"size\":\"L\",\"stock\":20,\"sku\":\"GREEN_L_001\"}]}]",
									"description": "Updated JSON array of color data",
									"type": "text"
								},
								{
									"key": "images",
									"description": "New image files to add",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/update/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								"update",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item"
								}
							]
						},
						"description": "Updates item details for a specific item."
					},
					"response": []
				},
				{
					"name": "Delete Item Details",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item details"
								}
							]
						},
						"description": "Deletes item details by their ID."
					},
					"response": []
				},
				{
					"name": "Delete Media from Item Details",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mediaUrls\": [\n        \"https://example.com/image1.jpg\",\n        \"https://example.com/video1.mp4\"\n    ],\n    \"colorId\": \"red_001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/delete-media/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								"delete-media",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "64f1b2a5c8d9e1234567890a",
									"description": "MongoDB ObjectId of the item"
								}
							]
						},
						"description": "Deletes specific media (images/videos) from item details."
					},
					"response": []
				},
				{
					"name": "Get Zero Stock Item Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/zero-stock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								"zero-stock"
							]
						},
						"description": "Retrieves item details for items with zero stock."
					},
					"response": []
				},
				{
					"name": "Get Out of Stock Count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/out-of-stock/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								"out-of-stock",
								"count"
							]
						},
						"description": "Retrieves the count of out-of-stock items."
					},
					"response": []
				},
				{
					"name": "Download All Item Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set authorization header if token exists",
									"if (pm.environment.get('jwt_token')) {",
									"    pm.request.headers.add({",
									"        key: 'Authorization',",
									"        value: 'Bearer ' + pm.environment.get('jwt_token')",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/itemDetails/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"itemDetails",
								"download"
							]
						},
						"description": "Downloads all item details. Requires admin authentication."
					},
					"response": []
				}
			],
			"description": "Item Details management APIs"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Request to: ' + pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('Status code is success', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "your_jwt_token_here",
			"type": "string"
		}
	]
}
